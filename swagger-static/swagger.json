{
  "openapi": "3.0.0",
  "paths": {
    "/api/auth/register": {
      "post": {
        "operationId": "AuthController_register",
        "summary": "Register a new user",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "User full name",
                    "example": "John Doe"
                  },
                  "email": {
                    "type": "string",
                    "description": "User email",
                    "example": "user@example.com"
                  },
                  "password": {
                    "type": "string",
                    "description": "User password",
                    "example": "Password123!",
                    "minLength": 8
                  },
                  "repeatPassword": {
                    "type": "string",
                    "description": "Repeat password for confirmation",
                    "example": "Password123!"
                  },
                  "accessCode": {
                    "type": "string",
                    "description": "Access code for registration (required for all accounts except first admin)",
                    "example": "ABC123XYZ"
                  },
                  "phone": {
                    "type": "string",
                    "description": "Phone number",
                    "example": "+1234567890"
                  }
                },
                "required": [
                  "name",
                  "email",
                  "password",
                  "repeatPassword",
                  "accessCode"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully"
          },
          "400": {
            "description": "Invalid input data"
          },
          "409": {
            "description": "User with this email already exists"
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/api/auth/login": {
      "post": {
        "operationId": "AuthController_login",
        "summary": "User login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "User email",
                    "example": "user@example.com"
                  },
                  "password": {
                    "type": "string",
                    "description": "User password",
                    "example": "password123",
                    "minLength": 8
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful"
          },
          "401": {
            "description": "Invalid credentials"
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/api/auth/verify-access-code": {
      "post": {
        "operationId": "AuthController_verifyAccessCode",
        "summary": "Verify a registration access code",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "User email",
                    "example": "user@example.com"
                  },
                  "accessCode": {
                    "type": "string",
                    "description": "Access code received via email",
                    "example": "ABC123XYZ"
                  }
                },
                "required": [
                  "email",
                  "accessCode"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Access code is valid"
          },
          "400": {
            "description": "Invalid or expired access code"
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/api/auth/forgot-password": {
      "post": {
        "operationId": "AuthController_forgotPassword",
        "summary": "Request password reset",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "User email",
                    "example": "user@example.com"
                  }
                },
                "required": [
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset requested successfully"
          },
          "404": {
            "description": "User not found"
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/api/auth/reset-password": {
      "post": {
        "operationId": "AuthController_resetPassword",
        "summary": "Reset password with code",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "User email",
                    "example": "user@example.com"
                  },
                  "resetCode": {
                    "type": "string",
                    "description": "Reset code received via email",
                    "example": "ABC123XYZ"
                  },
                  "newPassword": {
                    "type": "string",
                    "description": "New password",
                    "example": "NewPassword123!"
                  }
                },
                "required": [
                  "email",
                  "resetCode",
                  "newPassword"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset successful"
          },
          "400": {
            "description": "Invalid or expired reset code"
          },
          "404": {
            "description": "User not found"
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/api/users": {
      "post": {
        "operationId": "UsersController_createUser",
        "summary": "Create a new user profile (Admin only)",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "User full name",
                    "example": "John Doe"
                  },
                  "email": {
                    "type": "string",
                    "description": "User email",
                    "example": "user@example.com"
                  },
                  "role": {
                    "type": "string",
                    "description": "User role",
                    "enum": [
                      "admin",
                      "patient",
                      "practitioner"
                    ],
                    "example": "patient"
                  },
                  "phone": {
                    "type": "string",
                    "description": "Phone number",
                    "example": "+1234567890"
                  },
                  "fhirResourceId": {
                    "type": "string",
                    "description": "FHIR resource ID",
                    "example": "123456"
                  },
                  "fhirResourceType": {
                    "type": "string",
                    "description": "FHIR resource type",
                    "example": "Patient or Practitioner"
                  }
                },
                "required": [
                  "name",
                  "email",
                  "role"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User profile created successfully"
          },
          "400": {
            "description": "Invalid input data"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - Admin access required"
          }
        },
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "UsersController_findAll",
        "summary": "Get all users (Admin only)",
        "parameters": [
          {
            "name": "role",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of all users"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - Admin access required"
          }
        },
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/users/create-with-resource": {
      "post": {
        "operationId": "UsersController_createUserWithResource",
        "summary": "Create a new user with associated FHIR resource (Admin only)",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "User full name",
                    "example": "John Doe"
                  },
                  "email": {
                    "type": "string",
                    "description": "User email",
                    "example": "user@example.com"
                  },
                  "role": {
                    "type": "string",
                    "description": "User role",
                    "enum": [
                      "patient",
                      "practitioner"
                    ],
                    "example": "patient"
                  },
                  "phone": {
                    "type": "string",
                    "description": "Phone number",
                    "example": "+1234567890"
                  },
                  "resourceData": {
                    "type": "object",
                    "description": "FHIR resource data",
                    "example": {
                      "resourceType": "Patient",
                      "active": true,
                      "name": [
                        {
                          "family": "Doe",
                          "given": [
                            "John"
                          ]
                        }
                      ],
                      "gender": "male",
                      "birthDate": "1970-01-01"
                    }
                  }
                },
                "required": [
                  "name",
                  "email",
                  "role",
                  "resourceData"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User and resource created successfully"
          },
          "400": {
            "description": "Invalid input data"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - Admin access required"
          }
        },
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/users/{id}": {
      "get": {
        "operationId": "UsersController_findOne",
        "summary": "Get user by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User not found"
          }
        },
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "operationId": "UsersController_update",
        "summary": "Update a user (Admin only)",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - Admin access required"
          },
          "404": {
            "description": "User not found"
          }
        },
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "UsersController_remove",
        "summary": "Delete a user (Admin only)",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - Admin access required"
          },
          "404": {
            "description": "User not found"
          }
        },
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/users/regenerate-access-code": {
      "post": {
        "operationId": "UsersController_regenerateAccessCode",
        "summary": "Regenerate access code for a user (Admin only)",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Access code regenerated successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - Admin access required"
          },
          "404": {
            "description": "User not found"
          }
        },
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/users/{id}/avatar": {
      "patch": {
        "operationId": "UsersController_updateAvatar",
        "summary": "Update user avatar",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Avatar updated successfully"
          },
          "400": {
            "description": "Invalid file format"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/users/{id}/profile": {
      "get": {
        "operationId": "UsersController_getUserProfile",
        "summary": "Get user profile with details",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User profile retrieved successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User not found"
          }
        },
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/{resourceType}": {
      "post": {
        "operationId": "GenericResourceController_create",
        "summary": "Create new resource",
        "parameters": [
          {
            "name": "resourceType",
            "required": true,
            "in": "path",
            "description": "FHIR resource type",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Resource created successfully"
          },
          "403": {
            "description": "Forbidden - requires admin privileges"
          }
        },
        "tags": [
          "FHIR Resources"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "GenericResourceController_findAll",
        "summary": "Get paginated list of resources",
        "parameters": [
          {
            "name": "resourceType",
            "required": true,
            "in": "path",
            "description": "FHIR resource type (e.g. Patient, Practitioner)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Items per page",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Sort field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortDirection",
            "required": false,
            "in": "query",
            "schema": {
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of resources with pagination metadata"
          }
        },
        "tags": [
          "FHIR Resources"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/{resourceType}/{id}": {
      "get": {
        "operationId": "GenericResourceController_findOne",
        "summary": "Get resource by ID",
        "parameters": [
          {
            "name": "resourceType",
            "required": true,
            "in": "path",
            "description": "FHIR resource type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Resource ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The found resource"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "tags": [
          "FHIR Resources"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "operationId": "GenericResourceController_update",
        "summary": "Update resource by ID",
        "parameters": [
          {
            "name": "resourceType",
            "required": true,
            "in": "path",
            "description": "FHIR resource type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Resource ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource updated successfully"
          },
          "403": {
            "description": "Forbidden - requires admin privileges"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "tags": [
          "FHIR Resources"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "GenericResourceController_remove",
        "summary": "Delete resource by ID",
        "parameters": [
          {
            "name": "resourceType",
            "required": true,
            "in": "path",
            "description": "FHIR resource type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Resource ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "403": {
            "description": "Forbidden - requires admin privileges"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "tags": [
          "FHIR Resources"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/my-resources": {
      "get": {
        "operationId": "FhirController_getUserResources",
        "summary": "Get resources associated with the authenticated user",
        "parameters": [],
        "responses": {
          "200": {
            "description": "User resources"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "fhir"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/patient-profile": {
      "get": {
        "operationId": "FhirController_getPatientProfile",
        "summary": "Get the Patient resource for the authenticated patient user",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Patient profile"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - Patient access required"
          },
          "404": {
            "description": "Patient profile not found"
          }
        },
        "tags": [
          "fhir"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/practitioner-profile": {
      "get": {
        "operationId": "FhirController_getPractitionerProfile",
        "summary": "Get the Practitioner resource for the authenticated practitioner user",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Practitioner profile"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - Practitioner access required"
          },
          "404": {
            "description": "Practitioner profile not found"
          }
        },
        "tags": [
          "fhir"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/metadata": {
      "get": {
        "operationId": "FhirController_getMetadata",
        "summary": "Get FHIR server capability statement",
        "parameters": [],
        "responses": {
          "200": {
            "description": "FHIR capability statement"
          }
        },
        "tags": [
          "fhir"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/health": {
      "get": {
        "operationId": "FhirController_checkHealth",
        "summary": "Check FHIR server health",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Server health information"
          }
        },
        "tags": [
          "fhir"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/registry": {
      "get": {
        "operationId": "FhirController_getRegistry",
        "summary": "Get registered resource types",
        "parameters": [],
        "responses": {
          "200": {
            "description": "List of registered FHIR resource types"
          }
        },
        "tags": [
          "fhir"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir": {
      "get": {
        "operationId": "GenericResourceController_getResourceTypes",
        "summary": "Get list of supported resource types",
        "parameters": [],
        "responses": {
          "200": {
            "description": "List of available resource types"
          }
        },
        "tags": [
          "FHIR Resources"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Patient/$my-profile": {
      "get": {
        "operationId": "PatientController_getMyProfile",
        "summary": "Get the patient profile for the authenticated user",
        "description": "Retrieves the FHIR Patient resource that is associated with the currently authenticated user. The user must have the PATIENT role.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Patient record retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "resourceType": {
                      "type": "string",
                      "description": "Type of the FHIR resource",
                      "example": "Patient"
                    },
                    "id": {
                      "type": "string",
                      "description": "Logical identifier for this resource",
                      "example": "f001"
                    },
                    "meta": {
                      "type": "object",
                      "description": "Metadata about this resource",
                      "example": {
                        "versionId": "1",
                        "lastUpdated": "2023-06-15T10:15:30.000Z"
                      }
                    },
                    "text": {
                      "type": "object",
                      "description": "A human-readable narrative",
                      "example": {
                        "status": "generated",
                        "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\">Some narrative content</div>"
                      }
                    },
                    "active": {
                      "type": "boolean",
                      "description": "Whether this patient record is in active use",
                      "example": true
                    },
                    "name": {
                      "type": "array",
                      "description": "A name associated with the patient",
                      "items": {
                        "type": "object",
                        "properties": {
                          "use": {
                            "type": "string",
                            "example": "official"
                          },
                          "family": {
                            "type": "string",
                            "example": "Smith"
                          },
                          "given": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "John"
                            ]
                          }
                        }
                      }
                    },
                    "telecom": {
                      "type": "array",
                      "description": "A contact detail for the patient",
                      "items": {
                        "type": "object",
                        "properties": {
                          "system": {
                            "type": "string",
                            "example": "phone"
                          },
                          "value": {
                            "type": "string",
                            "example": "555-123-4567"
                          },
                          "use": {
                            "type": "string",
                            "example": "home"
                          }
                        }
                      }
                    },
                    "gender": {
                      "type": "string",
                      "description": "Administrative Gender",
                      "example": "male",
                      "enum": [
                        "male",
                        "female",
                        "other",
                        "unknown"
                      ]
                    },
                    "birthDate": {
                      "type": "string",
                      "description": "The date of birth for the patient",
                      "example": "1974-12-25"
                    }
                  },
                  "required": [
                    "resourceType"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - User is not a patient"
          },
          "404": {
            "description": "Patient profile not found"
          }
        },
        "tags": [
          "patients"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Patient/$my-encounters": {
      "get": {
        "operationId": "PatientController_getMyEncounters",
        "summary": "Get encounters for the authenticated patient",
        "description": "Retrieves all clinical encounters for the currently authenticated patient. Results can be filtered and paginated using query parameters.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Encounters retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "resourceType": {
                      "type": "string",
                      "description": "Type of the FHIR resource",
                      "example": "Bundle"
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of bundle (document, message, transaction, etc.)",
                      "example": "searchset"
                    },
                    "total": {
                      "type": "number",
                      "description": "Total number of matches",
                      "example": 15
                    },
                    "link": {
                      "type": "array",
                      "description": "Links for pagination or related resources",
                      "items": {
                        "type": "object",
                        "properties": {
                          "relation": {
                            "type": "string",
                            "example": "self"
                          },
                          "url": {
                            "type": "string",
                            "example": "http://example.org/fhir/Patient?_count=10"
                          }
                        }
                      }
                    },
                    "entry": {
                      "type": "array",
                      "description": "Entries in the bundle",
                      "items": {
                        "type": "object",
                        "properties": {
                          "fullUrl": {
                            "type": "string"
                          },
                          "resource": {
                            "type": "object"
                          },
                          "search": {
                            "type": "object",
                            "properties": {
                              "mode": {
                                "type": "string"
                              },
                              "score": {
                                "type": "number"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "resourceType",
                    "type"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - User is not a patient"
          }
        },
        "tags": [
          "patients"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Patient/$my-observations": {
      "get": {
        "operationId": "PatientController_getMyObservations",
        "summary": "Get observations for the authenticated patient",
        "description": "Retrieves all clinical observations (vital signs, lab results, etc.) for the currently authenticated patient. Results can be filtered and paginated using query parameters.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Observations retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "resourceType": {
                      "type": "string",
                      "description": "Type of the FHIR resource",
                      "example": "Bundle"
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of bundle (document, message, transaction, etc.)",
                      "example": "searchset"
                    },
                    "total": {
                      "type": "number",
                      "description": "Total number of matches",
                      "example": 15
                    },
                    "link": {
                      "type": "array",
                      "description": "Links for pagination or related resources",
                      "items": {
                        "type": "object",
                        "properties": {
                          "relation": {
                            "type": "string",
                            "example": "self"
                          },
                          "url": {
                            "type": "string",
                            "example": "http://example.org/fhir/Patient?_count=10"
                          }
                        }
                      }
                    },
                    "entry": {
                      "type": "array",
                      "description": "Entries in the bundle",
                      "items": {
                        "type": "object",
                        "properties": {
                          "fullUrl": {
                            "type": "string"
                          },
                          "resource": {
                            "type": "object"
                          },
                          "search": {
                            "type": "object",
                            "properties": {
                              "mode": {
                                "type": "string"
                              },
                              "score": {
                                "type": "number"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "resourceType",
                    "type"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - User is not a patient"
          }
        },
        "tags": [
          "patients"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Patient/$my-medications": {
      "get": {
        "operationId": "PatientController_getMyMedications",
        "summary": "Get medications for the authenticated patient",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Medications retrieved successfully"
          },
          "403": {
            "description": "Forbidden - User is not a patient"
          }
        },
        "tags": [
          "patients"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Patient/{id}/$everything": {
      "get": {
        "operationId": "PatientController_getEverything",
        "summary": "Get all data for a specific patient",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Patient ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Patient data retrieved successfully"
          },
          "404": {
            "description": "Patient not found"
          }
        },
        "tags": [
          "patients"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Patient/$register": {
      "post": {
        "operationId": "PatientController_registerPatient",
        "summary": "Register a new patient",
        "description": "Creates a new patient resource in the FHIR server. Typically used during the registration process.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Patient registration data",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "resource"
                ],
                "properties": {
                  "resource": {
                    "type": "object",
                    "required": [
                      "resourceType"
                    ],
                    "properties": {
                      "resourceType": {
                        "type": "string",
                        "enum": [
                          "Patient"
                        ]
                      },
                      "active": {
                        "type": "boolean"
                      },
                      "name": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "use": {
                              "type": "string",
                              "enum": [
                                "official",
                                "usual",
                                "nickname",
                                "anonymous",
                                "maiden",
                                "old"
                              ]
                            },
                            "family": {
                              "type": "string"
                            },
                            "given": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "prefix": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "suffix": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "telecom": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "system": {
                              "type": "string",
                              "enum": [
                                "phone",
                                "email",
                                "fax",
                                "pager",
                                "url",
                                "sms",
                                "other"
                              ]
                            },
                            "value": {
                              "type": "string"
                            },
                            "use": {
                              "type": "string",
                              "enum": [
                                "home",
                                "work",
                                "temp",
                                "old",
                                "mobile"
                              ]
                            }
                          }
                        }
                      },
                      "gender": {
                        "type": "string",
                        "enum": [
                          "male",
                          "female",
                          "other",
                          "unknown"
                        ]
                      },
                      "birthDate": {
                        "type": "string",
                        "format": "date"
                      },
                      "address": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "use": {
                              "type": "string",
                              "enum": [
                                "home",
                                "work",
                                "temp",
                                "old",
                                "billing"
                              ]
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "postal",
                                "physical",
                                "both"
                              ]
                            },
                            "line": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "city": {
                              "type": "string"
                            },
                            "district": {
                              "type": "string"
                            },
                            "state": {
                              "type": "string"
                            },
                            "postalCode": {
                              "type": "string"
                            },
                            "country": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "patientExample": {
                  "value": {
                    "resource": {
                      "resourceType": "Patient",
                      "active": true,
                      "name": [
                        {
                          "use": "official",
                          "family": "Smith",
                          "given": [
                            "John",
                            "Edward"
                          ],
                          "prefix": [
                            "Mr"
                          ]
                        }
                      ],
                      "telecom": [
                        {
                          "system": "phone",
                          "value": "555-123-4567",
                          "use": "home"
                        },
                        {
                          "system": "email",
                          "value": "john.smith@example.com",
                          "use": "work"
                        }
                      ],
                      "gender": "male",
                      "birthDate": "1980-01-01",
                      "address": [
                        {
                          "use": "home",
                          "type": "both",
                          "line": [
                            "123 Main St",
                            "Apt 4B"
                          ],
                          "city": "Anytown",
                          "state": "CA",
                          "postalCode": "12345",
                          "country": "USA"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Patient registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "resourceType": {
                      "type": "string",
                      "description": "Type of the FHIR resource",
                      "example": "Patient"
                    },
                    "id": {
                      "type": "string",
                      "description": "Logical identifier for this resource",
                      "example": "f001"
                    },
                    "meta": {
                      "type": "object",
                      "description": "Metadata about this resource",
                      "example": {
                        "versionId": "1",
                        "lastUpdated": "2023-06-15T10:15:30.000Z"
                      }
                    },
                    "text": {
                      "type": "object",
                      "description": "A human-readable narrative",
                      "example": {
                        "status": "generated",
                        "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\">Some narrative content</div>"
                      }
                    },
                    "active": {
                      "type": "boolean",
                      "description": "Whether this patient record is in active use",
                      "example": true
                    },
                    "name": {
                      "type": "array",
                      "description": "A name associated with the patient",
                      "items": {
                        "type": "object",
                        "properties": {
                          "use": {
                            "type": "string",
                            "example": "official"
                          },
                          "family": {
                            "type": "string",
                            "example": "Smith"
                          },
                          "given": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "John"
                            ]
                          }
                        }
                      }
                    },
                    "telecom": {
                      "type": "array",
                      "description": "A contact detail for the patient",
                      "items": {
                        "type": "object",
                        "properties": {
                          "system": {
                            "type": "string",
                            "example": "phone"
                          },
                          "value": {
                            "type": "string",
                            "example": "555-123-4567"
                          },
                          "use": {
                            "type": "string",
                            "example": "home"
                          }
                        }
                      }
                    },
                    "gender": {
                      "type": "string",
                      "description": "Administrative Gender",
                      "example": "male",
                      "enum": [
                        "male",
                        "female",
                        "other",
                        "unknown"
                      ]
                    },
                    "birthDate": {
                      "type": "string",
                      "description": "The date of birth for the patient",
                      "example": "1974-12-25"
                    }
                  },
                  "required": [
                    "resourceType"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid registration data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "resourceType": {
                      "type": "string",
                      "description": "Type of the FHIR resource",
                      "example": "OperationOutcome"
                    },
                    "issue": {
                      "type": "array",
                      "description": "Issue details",
                      "items": {
                        "type": "object",
                        "properties": {
                          "severity": {
                            "type": "string",
                            "enum": [
                              "fatal",
                              "error",
                              "warning",
                              "information"
                            ],
                            "example": "error"
                          },
                          "code": {
                            "type": "string",
                            "example": "processing"
                          },
                          "diagnostics": {
                            "type": "string",
                            "example": "The operation failed because of an internal server error"
                          },
                          "location": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "Patient.name[0].given[0]"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "resourceType",
                    "issue"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "patients"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Patient/$my-demographics": {
      "patch": {
        "operationId": "PatientController_updateMyDemographics",
        "summary": "Update demographics for the authenticated patient",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Patient demographic data to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Demographics updated successfully"
          },
          "403": {
            "description": "Forbidden - User is not a patient"
          },
          "404": {
            "description": "Patient profile not found"
          }
        },
        "tags": [
          "patients"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Patient/{id}/assign-provider": {
      "post": {
        "operationId": "PatientController_assignProvider",
        "summary": "Assign a healthcare provider to a patient",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Patient ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Provider assignment details",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "practitionerId": {
                    "type": "string",
                    "example": "123456"
                  },
                  "relationship": {
                    "type": "object",
                    "example": {
                      "coding": [
                        {
                          "system": "http://terminology.hl7.org/CodeSystem/v2-0131",
                          "code": "CP",
                          "display": "Consulting Provider"
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "practitionerId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Provider assigned successfully"
          },
          "404": {
            "description": "Patient or practitioner not found"
          }
        },
        "tags": [
          "patients"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Patient/{id}/providers": {
      "get": {
        "operationId": "PatientController_getProviders",
        "summary": "Get healthcare providers for a patient",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Patient ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Providers retrieved successfully"
          },
          "404": {
            "description": "Patient not found"
          }
        },
        "tags": [
          "patients"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Patient/search": {
      "get": {
        "operationId": "PatientController_searchPatients",
        "summary": "Advanced search for patients with pagination and filtering",
        "parameters": [
          {
            "name": "size",
            "required": false,
            "in": "query",
            "description": "Page size",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number (0-based)",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "birthdate",
            "required": false,
            "in": "query",
            "description": "Birth date in YYYY-MM-DD format",
            "schema": {}
          },
          {
            "name": "gender",
            "required": false,
            "in": "query",
            "description": "Patient gender (male, female, other, unknown)",
            "schema": {}
          },
          {
            "name": "identifier",
            "required": false,
            "in": "query",
            "description": "Patient identifier",
            "schema": {}
          },
          {
            "name": "name",
            "required": false,
            "in": "query",
            "description": "Patient name to search for",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Search results"
          }
        },
        "tags": [
          "patients"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Patient/$summary": {
      "get": {
        "operationId": "PatientController_getPatientSummaryStats",
        "summary": "Get patient summary statistics",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Summary statistics"
          }
        },
        "tags": [
          "patients"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Patient": {
      "get": {
        "operationId": "PatientController_search",
        "summary": "Search for patients",
        "description": "Search for patients using FHIR search parameters. Results are paginated and can be filtered by name, gender, birthdate, and other supported parameters.",
        "parameters": [
          {
            "name": "_getpagesoffset",
            "required": false,
            "in": "query",
            "description": "Offset for pagination",
            "schema": {}
          },
          {
            "name": "_count",
            "required": false,
            "in": "query",
            "description": "Number of results per page",
            "schema": {}
          },
          {
            "name": "identifier",
            "required": false,
            "in": "query",
            "description": "Patient identifier (format: [system]|[value])",
            "schema": {}
          },
          {
            "name": "birthdate",
            "required": false,
            "in": "query",
            "description": "Birth date in YYYY-MM-DD format (supports gt, lt, ge, le prefixes)",
            "schema": {}
          },
          {
            "name": "gender",
            "required": false,
            "in": "query",
            "description": "Patient gender (male, female, other, unknown)",
            "schema": {}
          },
          {
            "name": "name",
            "required": false,
            "in": "query",
            "description": "Patient name (supports :exact and :contains modifiers)",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Search results",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "resourceType": {
                      "type": "string",
                      "description": "Type of the FHIR resource",
                      "example": "Bundle"
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of bundle (document, message, transaction, etc.)",
                      "example": "searchset"
                    },
                    "total": {
                      "type": "number",
                      "description": "Total number of matches",
                      "example": 15
                    },
                    "link": {
                      "type": "array",
                      "description": "Links for pagination or related resources",
                      "items": {
                        "type": "object",
                        "properties": {
                          "relation": {
                            "type": "string",
                            "example": "self"
                          },
                          "url": {
                            "type": "string",
                            "example": "http://example.org/fhir/Patient?_count=10"
                          }
                        }
                      }
                    },
                    "entry": {
                      "type": "array",
                      "description": "Entries in the bundle",
                      "items": {
                        "type": "object",
                        "properties": {
                          "fullUrl": {
                            "type": "string"
                          },
                          "resource": {
                            "type": "object"
                          },
                          "search": {
                            "type": "object",
                            "properties": {
                              "mode": {
                                "type": "string"
                              },
                              "score": {
                                "type": "number"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "resourceType",
                    "type"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required"
          }
        },
        "tags": [
          "patients"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "PatientController_create",
        "summary": "Create a new resource",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Resource created successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "patients"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Patient/{id}": {
      "get": {
        "operationId": "PatientController_findOne",
        "summary": "Get a patient by ID",
        "description": "Retrieves a specific patient resource by its ID. The user must have appropriate permissions to access the patient data.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Patient ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Patient retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "resourceType": {
                      "type": "string",
                      "description": "Type of the FHIR resource",
                      "example": "Patient"
                    },
                    "id": {
                      "type": "string",
                      "description": "Logical identifier for this resource",
                      "example": "f001"
                    },
                    "meta": {
                      "type": "object",
                      "description": "Metadata about this resource",
                      "example": {
                        "versionId": "1",
                        "lastUpdated": "2023-06-15T10:15:30.000Z"
                      }
                    },
                    "text": {
                      "type": "object",
                      "description": "A human-readable narrative",
                      "example": {
                        "status": "generated",
                        "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\">Some narrative content</div>"
                      }
                    },
                    "active": {
                      "type": "boolean",
                      "description": "Whether this patient record is in active use",
                      "example": true
                    },
                    "name": {
                      "type": "array",
                      "description": "A name associated with the patient",
                      "items": {
                        "type": "object",
                        "properties": {
                          "use": {
                            "type": "string",
                            "example": "official"
                          },
                          "family": {
                            "type": "string",
                            "example": "Smith"
                          },
                          "given": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "John"
                            ]
                          }
                        }
                      }
                    },
                    "telecom": {
                      "type": "array",
                      "description": "A contact detail for the patient",
                      "items": {
                        "type": "object",
                        "properties": {
                          "system": {
                            "type": "string",
                            "example": "phone"
                          },
                          "value": {
                            "type": "string",
                            "example": "555-123-4567"
                          },
                          "use": {
                            "type": "string",
                            "example": "home"
                          }
                        }
                      }
                    },
                    "gender": {
                      "type": "string",
                      "description": "Administrative Gender",
                      "example": "male",
                      "enum": [
                        "male",
                        "female",
                        "other",
                        "unknown"
                      ]
                    },
                    "birthDate": {
                      "type": "string",
                      "description": "The date of birth for the patient",
                      "example": "1974-12-25"
                    }
                  },
                  "required": [
                    "resourceType"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required"
          },
          "404": {
            "description": "Not Found - Resource does not exist"
          }
        },
        "tags": [
          "patients"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "operationId": "PatientController_update",
        "summary": "Update a resource",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Resource ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource updated successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "tags": [
          "patients"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "PatientController_remove",
        "summary": "Delete a resource",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Resource ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "tags": [
          "patients"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Patient/{id}/_history": {
      "get": {
        "operationId": "PatientController_getHistory",
        "summary": "Get resource history",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Resource ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "History retrieved successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "tags": [
          "patients"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Patient/$validate": {
      "post": {
        "operationId": "PatientController_validate",
        "summary": "Validate a resource",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Validation results"
          },
          "400": {
            "description": "Invalid resource"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "patients"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Practitioner/$my-profile": {
      "get": {
        "operationId": "PractitionerController_getMyProfile",
        "summary": "Get the practitioner profile for the authenticated user",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Practitioner record retrieved successfully"
          },
          "403": {
            "description": "Forbidden - User is not a practitioner"
          },
          "404": {
            "description": "Practitioner profile not found"
          }
        },
        "tags": [
          "practitioners"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Practitioner/$my-patients": {
      "get": {
        "operationId": "PractitionerController_getMyPatients",
        "summary": "Get patients assigned to the authenticated practitioner",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Patients retrieved successfully"
          },
          "403": {
            "description": "Forbidden - User is not a practitioner"
          }
        },
        "tags": [
          "practitioners"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Practitioner/$my-encounters": {
      "get": {
        "operationId": "PractitionerController_getMyEncounters",
        "summary": "Get encounters for the authenticated practitioner",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Encounters retrieved successfully"
          },
          "403": {
            "description": "Forbidden - User is not a practitioner"
          }
        },
        "tags": [
          "practitioners"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Practitioner/{id}/schedule": {
      "get": {
        "operationId": "PractitionerController_getSchedule",
        "summary": "Get schedules for a practitioner",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Practitioner ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Schedules retrieved successfully"
          },
          "404": {
            "description": "Practitioner not found"
          }
        },
        "tags": [
          "practitioners"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Practitioner/$my-details": {
      "patch": {
        "operationId": "PractitionerController_updateMyDetails",
        "summary": "Update professional details for the authenticated practitioner",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Practitioner data to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Details updated successfully"
          },
          "403": {
            "description": "Forbidden - User is not a practitioner"
          },
          "404": {
            "description": "Practitioner profile not found"
          }
        },
        "tags": [
          "practitioners"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Practitioner/$set-availability": {
      "post": {
        "operationId": "PractitionerController_setAvailability",
        "summary": "Set availability for the authenticated practitioner",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Practitioner availability details",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "planningHorizon": {
                    "type": "object",
                    "properties": {
                      "start": {
                        "type": "string",
                        "example": "2025-06-01"
                      },
                      "end": {
                        "type": "string",
                        "example": "2025-06-30"
                      }
                    },
                    "required": [
                      "start",
                      "end"
                    ]
                  },
                  "slots": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "start": {
                          "type": "string",
                          "example": "2025-06-01T09:00:00Z"
                        },
                        "end": {
                          "type": "string",
                          "example": "2025-06-01T09:30:00Z"
                        },
                        "status": {
                          "type": "string",
                          "example": "free"
                        }
                      },
                      "required": [
                        "start",
                        "end",
                        "status"
                      ]
                    }
                  }
                },
                "required": [
                  "planningHorizon",
                  "slots"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Availability set successfully"
          },
          "403": {
            "description": "Forbidden - User is not a practitioner"
          }
        },
        "tags": [
          "practitioners"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Practitioner/{id}/available-slots": {
      "get": {
        "operationId": "PractitionerController_getAvailableSlots",
        "summary": "Get available time slots for a practitioner",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Practitioner ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start",
            "required": false,
            "in": "query",
            "description": "Start date (YYYY-MM-DD)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end",
            "required": false,
            "in": "query",
            "description": "End date (YYYY-MM-DD)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Available slots retrieved successfully"
          },
          "404": {
            "description": "Practitioner not found"
          }
        },
        "tags": [
          "practitioners"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Practitioner/search": {
      "get": {
        "operationId": "PractitionerController_searchPractitioners",
        "summary": "Advanced search for practitioners with filtering",
        "parameters": [
          {
            "name": "size",
            "required": false,
            "in": "query",
            "description": "Page size",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number (0-based)",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "available",
            "required": false,
            "in": "query",
            "description": "Filter to only those with availability",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "identifier",
            "required": false,
            "in": "query",
            "description": "Practitioner identifier",
            "schema": {}
          },
          {
            "name": "specialty",
            "required": false,
            "in": "query",
            "description": "Specialty code",
            "schema": {}
          },
          {
            "name": "name",
            "required": false,
            "in": "query",
            "description": "Practitioner name to search for",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Search results"
          }
        },
        "tags": [
          "practitioners"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Practitioner/$statistics": {
      "get": {
        "operationId": "PractitionerController_getPractitionerStatistics",
        "summary": "Get practitioner statistics",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Statistics retrieved successfully"
          }
        },
        "tags": [
          "practitioners"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Practitioner": {
      "post": {
        "operationId": "PractitionerController_create",
        "summary": "Create a new resource",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Resource created successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "practitioners"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "PractitionerController_search",
        "summary": "Search for resources",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Resources",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "description": "List of items",
                          "type": "array",
                          "items": {
                            "type": "array"
                          }
                        },
                        "meta": {
                          "description": "Pagination metadata",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "totalItems": {
                                  "type": "number",
                                  "description": "Total number of items",
                                  "example": 100
                                },
                                "itemsPerPage": {
                                  "type": "number",
                                  "description": "Number of items per page",
                                  "example": 10
                                },
                                "currentPage": {
                                  "type": "number",
                                  "description": "Current page number",
                                  "example": 1
                                },
                                "totalPages": {
                                  "type": "number",
                                  "description": "Total number of pages",
                                  "example": 10
                                },
                                "nextPage": {
                                  "type": "string",
                                  "description": "URL to the next page (null if there is no next page)",
                                  "example": "/api/fhir/Patient?page=2&limit=10",
                                  "nullable": true
                                },
                                "prevPage": {
                                  "type": "string",
                                  "description": "URL to the previous page (null if there is no previous page)",
                                  "example": null,
                                  "nullable": true
                                }
                              },
                              "required": [
                                "totalItems",
                                "itemsPerPage",
                                "currentPage",
                                "totalPages",
                                "nextPage",
                                "prevPage"
                              ]
                            }
                          ]
                        }
                      },
                      "required": [
                        "data",
                        "meta"
                      ]
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "practitioners"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Practitioner/{id}": {
      "get": {
        "operationId": "PractitionerController_findOne",
        "summary": "Get a resource by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Resource ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource retrieved successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "tags": [
          "practitioners"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "operationId": "PractitionerController_update",
        "summary": "Update a resource",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Resource ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource updated successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "tags": [
          "practitioners"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "PractitionerController_remove",
        "summary": "Delete a resource",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Resource ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "tags": [
          "practitioners"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Practitioner/{id}/_history": {
      "get": {
        "operationId": "PractitionerController_getHistory",
        "summary": "Get resource history",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Resource ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "History retrieved successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "tags": [
          "practitioners"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Practitioner/$validate": {
      "post": {
        "operationId": "PractitionerController_validate",
        "summary": "Validate a resource",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Validation results"
          },
          "400": {
            "description": "Invalid resource"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "practitioners"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/organizations": {
      "get": {
        "operationId": "OrganizationController_findAll",
        "summary": "Get all organizations with pagination",
        "parameters": [
          {
            "name": "name",
            "required": false,
            "in": "query",
            "description": "Filter by name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Items per page",
            "schema": {}
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "List of organizations"
          }
        },
        "tags": [
          "organizations"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "OrganizationController_create",
        "summary": "Create new organization",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Organization created successfully"
          },
          "403": {
            "description": "Forbidden - requires admin privileges"
          }
        },
        "tags": [
          "organizations"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/organizations/{id}": {
      "get": {
        "operationId": "OrganizationController_findOne",
        "summary": "Get organization by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Organization ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The organization"
          },
          "404": {
            "description": "Organization not found"
          }
        },
        "tags": [
          "organizations"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "operationId": "OrganizationController_update",
        "summary": "Update organization by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Organization ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Organization updated successfully"
          },
          "403": {
            "description": "Forbidden - requires admin privileges"
          },
          "404": {
            "description": "Organization not found"
          }
        },
        "tags": [
          "organizations"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "OrganizationController_remove",
        "summary": "Delete organization by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Organization ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Organization deleted successfully"
          },
          "403": {
            "description": "Forbidden - requires admin privileges"
          },
          "404": {
            "description": "Organization not found"
          }
        },
        "tags": [
          "organizations"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Encounter/$my-encounters": {
      "get": {
        "operationId": "EncounterController_getMyEncounters",
        "summary": "Get all encounters for the authenticated practitioner",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Encounters retrieved successfully"
          },
          "403": {
            "description": "Forbidden - User is not a practitioner"
          }
        },
        "tags": [
          "encounters"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Encounter/patient/{patientId}": {
      "get": {
        "operationId": "EncounterController_getPatientEncounters",
        "summary": "Get all encounters for a specific patient",
        "parameters": [
          {
            "name": "patientId",
            "required": true,
            "in": "path",
            "description": "Patient ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Encounters retrieved successfully"
          },
          "404": {
            "description": "Patient not found"
          }
        },
        "tags": [
          "encounters"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Encounter/$active": {
      "get": {
        "operationId": "EncounterController_getActiveEncounters",
        "summary": "Get all active encounters",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Active encounters retrieved successfully"
          }
        },
        "tags": [
          "encounters"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Encounter/{id}/$everything": {
      "get": {
        "operationId": "EncounterController_getEncounterEverything",
        "summary": "Get all resources associated with an encounter",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Encounter ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Associated resources retrieved successfully"
          },
          "404": {
            "description": "Encounter not found"
          }
        },
        "tags": [
          "encounters"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Encounter": {
      "post": {
        "operationId": "EncounterController_create",
        "summary": "Create a new resource",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Resource created successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "encounters"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "EncounterController_search",
        "summary": "Search for resources",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Resources",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "description": "List of items",
                          "type": "array",
                          "items": {
                            "type": "array"
                          }
                        },
                        "meta": {
                          "description": "Pagination metadata",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "totalItems": {
                                  "type": "number",
                                  "description": "Total number of items",
                                  "example": 100
                                },
                                "itemsPerPage": {
                                  "type": "number",
                                  "description": "Number of items per page",
                                  "example": 10
                                },
                                "currentPage": {
                                  "type": "number",
                                  "description": "Current page number",
                                  "example": 1
                                },
                                "totalPages": {
                                  "type": "number",
                                  "description": "Total number of pages",
                                  "example": 10
                                },
                                "nextPage": {
                                  "type": "string",
                                  "description": "URL to the next page (null if there is no next page)",
                                  "example": "/api/fhir/Patient?page=2&limit=10",
                                  "nullable": true
                                },
                                "prevPage": {
                                  "type": "string",
                                  "description": "URL to the previous page (null if there is no previous page)",
                                  "example": null,
                                  "nullable": true
                                }
                              },
                              "required": [
                                "totalItems",
                                "itemsPerPage",
                                "currentPage",
                                "totalPages",
                                "nextPage",
                                "prevPage"
                              ]
                            }
                          ]
                        }
                      },
                      "required": [
                        "data",
                        "meta"
                      ]
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "encounters"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Encounter/{id}/status": {
      "put": {
        "operationId": "EncounterController_updateStatus",
        "summary": "Update encounter status",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Encounter ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Status update data",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Encounter status updated successfully"
          },
          "404": {
            "description": "Encounter not found"
          }
        },
        "tags": [
          "encounters"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Encounter/{id}": {
      "get": {
        "operationId": "EncounterController_findOne",
        "summary": "Get a resource by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Resource ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource retrieved successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "tags": [
          "encounters"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "operationId": "EncounterController_update",
        "summary": "Update a resource",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Resource ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource updated successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "tags": [
          "encounters"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "EncounterController_remove",
        "summary": "Delete a resource",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Resource ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "tags": [
          "encounters"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Encounter/{id}/_history": {
      "get": {
        "operationId": "EncounterController_getHistory",
        "summary": "Get resource history",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Resource ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "History retrieved successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "tags": [
          "encounters"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Encounter/$validate": {
      "post": {
        "operationId": "EncounterController_validate",
        "summary": "Validate a resource",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Validation results"
          },
          "400": {
            "description": "Invalid resource"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "encounters"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Observation/$by-code": {
      "get": {
        "operationId": "ObservationController_getObservationsByCode",
        "summary": "Search observations by code",
        "parameters": [
          {
            "name": "code",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Observations retrieved successfully"
          }
        },
        "tags": [
          "observations"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Observation/patient/{patientId}": {
      "get": {
        "operationId": "ObservationController_getPatientObservations",
        "summary": "Get observations for a specific patient",
        "parameters": [
          {
            "name": "patientId",
            "required": true,
            "in": "path",
            "description": "Patient ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Observations retrieved successfully"
          },
          "404": {
            "description": "Patient not found"
          }
        },
        "tags": [
          "observations"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Observation/patient/{patientId}/latest": {
      "get": {
        "operationId": "ObservationController_getLatestObservation",
        "summary": "Get latest observation of a specific type for a patient",
        "parameters": [
          {
            "name": "patientId",
            "required": true,
            "in": "path",
            "description": "Patient ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Latest observation retrieved successfully"
          },
          "404": {
            "description": "No observations found"
          }
        },
        "tags": [
          "observations"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Observation/patient/{patientId}/vitals": {
      "get": {
        "operationId": "ObservationController_getVitalSigns",
        "summary": "Get vital signs for a patient",
        "parameters": [
          {
            "name": "patientId",
            "required": true,
            "in": "path",
            "description": "Patient ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Vital signs retrieved successfully"
          }
        },
        "tags": [
          "observations"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Observation/patient/{patientId}/labs": {
      "get": {
        "operationId": "ObservationController_getLabResults",
        "summary": "Get lab results for a patient",
        "parameters": [
          {
            "name": "patientId",
            "required": true,
            "in": "path",
            "description": "Patient ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lab results retrieved successfully"
          }
        },
        "tags": [
          "observations"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Observation": {
      "post": {
        "operationId": "ObservationController_create",
        "summary": "Create a new resource",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Resource created successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "observations"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "ObservationController_search",
        "summary": "Search for resources",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Resources",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "description": "List of items",
                          "type": "array",
                          "items": {
                            "type": "array"
                          }
                        },
                        "meta": {
                          "description": "Pagination metadata",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "totalItems": {
                                  "type": "number",
                                  "description": "Total number of items",
                                  "example": 100
                                },
                                "itemsPerPage": {
                                  "type": "number",
                                  "description": "Number of items per page",
                                  "example": 10
                                },
                                "currentPage": {
                                  "type": "number",
                                  "description": "Current page number",
                                  "example": 1
                                },
                                "totalPages": {
                                  "type": "number",
                                  "description": "Total number of pages",
                                  "example": 10
                                },
                                "nextPage": {
                                  "type": "string",
                                  "description": "URL to the next page (null if there is no next page)",
                                  "example": "/api/fhir/Patient?page=2&limit=10",
                                  "nullable": true
                                },
                                "prevPage": {
                                  "type": "string",
                                  "description": "URL to the previous page (null if there is no previous page)",
                                  "example": null,
                                  "nullable": true
                                }
                              },
                              "required": [
                                "totalItems",
                                "itemsPerPage",
                                "currentPage",
                                "totalPages",
                                "nextPage",
                                "prevPage"
                              ]
                            }
                          ]
                        }
                      },
                      "required": [
                        "data",
                        "meta"
                      ]
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "observations"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Observation/{id}": {
      "get": {
        "operationId": "ObservationController_findOne",
        "summary": "Get a resource by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Resource ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource retrieved successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "tags": [
          "observations"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "operationId": "ObservationController_update",
        "summary": "Update a resource",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Resource ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource updated successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "tags": [
          "observations"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "ObservationController_remove",
        "summary": "Delete a resource",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Resource ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "tags": [
          "observations"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Observation/{id}/_history": {
      "get": {
        "operationId": "ObservationController_getHistory",
        "summary": "Get resource history",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Resource ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "History retrieved successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "tags": [
          "observations"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Observation/$validate": {
      "post": {
        "operationId": "ObservationController_validate",
        "summary": "Validate a resource",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Validation results"
          },
          "400": {
            "description": "Invalid resource"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "observations"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/diagnostic-reports": {
      "get": {
        "operationId": "DiagnosticReportController_findAll",
        "summary": "Get all diagnostic reports with pagination",
        "parameters": [
          {
            "name": "patientId",
            "required": false,
            "in": "query",
            "description": "Filter by patient ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Items per page",
            "schema": {}
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "List of diagnostic reports"
          }
        },
        "tags": [
          "diagnostic-reports"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "DiagnosticReportController_create",
        "summary": "Create new diagnostic report",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Diagnostic report created successfully"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "tags": [
          "diagnostic-reports"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/diagnostic-reports/{id}": {
      "get": {
        "operationId": "DiagnosticReportController_findOne",
        "summary": "Get diagnostic report by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Diagnostic Report ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The diagnostic report"
          },
          "404": {
            "description": "Diagnostic report not found"
          }
        },
        "tags": [
          "diagnostic-reports"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "operationId": "DiagnosticReportController_update",
        "summary": "Update diagnostic report by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Diagnostic Report ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Diagnostic report updated successfully"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Diagnostic report not found"
          }
        },
        "tags": [
          "diagnostic-reports"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "DiagnosticReportController_remove",
        "summary": "Delete diagnostic report by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Diagnostic Report ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Diagnostic report deleted successfully"
          },
          "403": {
            "description": "Forbidden - requires admin privileges"
          },
          "404": {
            "description": "Diagnostic report not found"
          }
        },
        "tags": [
          "diagnostic-reports"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Medication/$by-code": {
      "get": {
        "operationId": "MedicationController_getMedicationsByCode",
        "summary": "Search medications by code",
        "parameters": [
          {
            "name": "code",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Medications retrieved successfully"
          }
        },
        "tags": [
          "medications"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Medication/$common": {
      "get": {
        "operationId": "MedicationController_getCommonMedications",
        "summary": "Get a list of commonly prescribed medications",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Common medications retrieved successfully"
          }
        },
        "tags": [
          "medications"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Medication": {
      "post": {
        "operationId": "MedicationController_create",
        "summary": "Create a new resource",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Resource created successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "medications"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "MedicationController_search",
        "summary": "Search for resources",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Resources",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "description": "List of items",
                          "type": "array",
                          "items": {
                            "type": "array"
                          }
                        },
                        "meta": {
                          "description": "Pagination metadata",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "totalItems": {
                                  "type": "number",
                                  "description": "Total number of items",
                                  "example": 100
                                },
                                "itemsPerPage": {
                                  "type": "number",
                                  "description": "Number of items per page",
                                  "example": 10
                                },
                                "currentPage": {
                                  "type": "number",
                                  "description": "Current page number",
                                  "example": 1
                                },
                                "totalPages": {
                                  "type": "number",
                                  "description": "Total number of pages",
                                  "example": 10
                                },
                                "nextPage": {
                                  "type": "string",
                                  "description": "URL to the next page (null if there is no next page)",
                                  "example": "/api/fhir/Patient?page=2&limit=10",
                                  "nullable": true
                                },
                                "prevPage": {
                                  "type": "string",
                                  "description": "URL to the previous page (null if there is no previous page)",
                                  "example": null,
                                  "nullable": true
                                }
                              },
                              "required": [
                                "totalItems",
                                "itemsPerPage",
                                "currentPage",
                                "totalPages",
                                "nextPage",
                                "prevPage"
                              ]
                            }
                          ]
                        }
                      },
                      "required": [
                        "data",
                        "meta"
                      ]
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "medications"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Medication/{id}": {
      "get": {
        "operationId": "MedicationController_findOne",
        "summary": "Get a resource by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Resource ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource retrieved successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "tags": [
          "medications"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "operationId": "MedicationController_update",
        "summary": "Update a resource",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Resource ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource updated successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "tags": [
          "medications"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "MedicationController_remove",
        "summary": "Delete a resource",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Resource ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "tags": [
          "medications"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Medication/{id}/_history": {
      "get": {
        "operationId": "MedicationController_getHistory",
        "summary": "Get resource history",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Resource ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "History retrieved successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "tags": [
          "medications"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Medication/$validate": {
      "post": {
        "operationId": "MedicationController_validate",
        "summary": "Validate a resource",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Validation results"
          },
          "400": {
            "description": "Invalid resource"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "medications"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/MedicationRequest/$my-medications": {
      "get": {
        "operationId": "MedicationRequestController_getMyMedications",
        "summary": "Get medication requests for the authenticated patient",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Medication requests retrieved successfully"
          },
          "403": {
            "description": "Forbidden - User is not a patient"
          }
        },
        "tags": [
          "medication-requests"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/MedicationRequest/patient/{patientId}/active": {
      "get": {
        "operationId": "MedicationRequestController_getActiveMedications",
        "summary": "Get active medications for a patient",
        "parameters": [
          {
            "name": "patientId",
            "required": true,
            "in": "path",
            "description": "Patient ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Active medications retrieved successfully"
          },
          "404": {
            "description": "Patient not found"
          }
        },
        "tags": [
          "medication-requests"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/MedicationRequest/encounter/{encounterId}": {
      "get": {
        "operationId": "MedicationRequestController_getMedicationsForEncounter",
        "summary": "Get medication requests for a specific encounter",
        "parameters": [
          {
            "name": "encounterId",
            "required": true,
            "in": "path",
            "description": "Encounter ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Medication requests retrieved successfully"
          },
          "404": {
            "description": "Encounter not found"
          }
        },
        "tags": [
          "medication-requests"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/MedicationRequest": {
      "post": {
        "operationId": "MedicationRequestController_create",
        "summary": "Create a new resource",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Resource created successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "medication-requests"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "MedicationRequestController_search",
        "summary": "Search for resources",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Resources",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "description": "List of items",
                          "type": "array",
                          "items": {
                            "type": "array"
                          }
                        },
                        "meta": {
                          "description": "Pagination metadata",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "totalItems": {
                                  "type": "number",
                                  "description": "Total number of items",
                                  "example": 100
                                },
                                "itemsPerPage": {
                                  "type": "number",
                                  "description": "Number of items per page",
                                  "example": 10
                                },
                                "currentPage": {
                                  "type": "number",
                                  "description": "Current page number",
                                  "example": 1
                                },
                                "totalPages": {
                                  "type": "number",
                                  "description": "Total number of pages",
                                  "example": 10
                                },
                                "nextPage": {
                                  "type": "string",
                                  "description": "URL to the next page (null if there is no next page)",
                                  "example": "/api/fhir/Patient?page=2&limit=10",
                                  "nullable": true
                                },
                                "prevPage": {
                                  "type": "string",
                                  "description": "URL to the previous page (null if there is no previous page)",
                                  "example": null,
                                  "nullable": true
                                }
                              },
                              "required": [
                                "totalItems",
                                "itemsPerPage",
                                "currentPage",
                                "totalPages",
                                "nextPage",
                                "prevPage"
                              ]
                            }
                          ]
                        }
                      },
                      "required": [
                        "data",
                        "meta"
                      ]
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "medication-requests"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/MedicationRequest/{id}": {
      "get": {
        "operationId": "MedicationRequestController_findOne",
        "summary": "Get a resource by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Resource ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource retrieved successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "tags": [
          "medication-requests"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "operationId": "MedicationRequestController_update",
        "summary": "Update a resource",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Resource ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource updated successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "tags": [
          "medication-requests"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "MedicationRequestController_remove",
        "summary": "Delete a resource",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Resource ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "tags": [
          "medication-requests"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/MedicationRequest/{id}/_history": {
      "get": {
        "operationId": "MedicationRequestController_getHistory",
        "summary": "Get resource history",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Resource ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "History retrieved successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "tags": [
          "medication-requests"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/MedicationRequest/$validate": {
      "post": {
        "operationId": "MedicationRequestController_validate",
        "summary": "Validate a resource",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Validation results"
          },
          "400": {
            "description": "Invalid resource"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "medication-requests"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/questionnaires": {
      "get": {
        "operationId": "QuestionnaireController_findAll",
        "summary": "Get all questionnaires with pagination",
        "parameters": [
          {
            "name": "title",
            "required": false,
            "in": "query",
            "description": "Filter by title",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Items per page",
            "schema": {}
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "List of questionnaires"
          }
        },
        "tags": [
          "questionnaires"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "QuestionnaireController_create",
        "summary": "Create new questionnaire",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Questionnaire created successfully"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "tags": [
          "questionnaires"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/questionnaires/{id}": {
      "get": {
        "operationId": "QuestionnaireController_findOne",
        "summary": "Get questionnaire by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Questionnaire ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The questionnaire"
          },
          "404": {
            "description": "Questionnaire not found"
          }
        },
        "tags": [
          "questionnaires"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "operationId": "QuestionnaireController_update",
        "summary": "Update questionnaire by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Questionnaire ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Questionnaire updated successfully"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Questionnaire not found"
          }
        },
        "tags": [
          "questionnaires"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "QuestionnaireController_remove",
        "summary": "Delete questionnaire by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Questionnaire ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Questionnaire deleted successfully"
          },
          "403": {
            "description": "Forbidden - requires admin privileges"
          },
          "404": {
            "description": "Questionnaire not found"
          }
        },
        "tags": [
          "questionnaires"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/payments": {
      "get": {
        "operationId": "PaymentController_findAll",
        "summary": "Get all payments with pagination",
        "parameters": [
          {
            "name": "patientId",
            "required": false,
            "in": "query",
            "description": "Filter by patient ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Items per page",
            "schema": {}
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "List of payments"
          }
        },
        "tags": [
          "payments"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "operationId": "PaymentController_create",
        "summary": "Create new payment",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Payment created successfully"
          },
          "403": {
            "description": "Forbidden - requires admin privileges"
          }
        },
        "tags": [
          "payments"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/payments/{id}": {
      "get": {
        "operationId": "PaymentController_findOne",
        "summary": "Get payment by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Payment ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The payment"
          },
          "404": {
            "description": "Payment not found"
          }
        },
        "tags": [
          "payments"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "operationId": "PaymentController_update",
        "summary": "Update payment by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Payment ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payment updated successfully"
          },
          "403": {
            "description": "Forbidden - requires admin privileges"
          },
          "404": {
            "description": "Payment not found"
          }
        },
        "tags": [
          "payments"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "PaymentController_remove",
        "summary": "Delete payment by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Payment ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payment deleted successfully"
          },
          "403": {
            "description": "Forbidden - requires admin privileges"
          },
          "404": {
            "description": "Payment not found"
          }
        },
        "tags": [
          "payments"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Condition/$my-conditions": {
      "get": {
        "operationId": "ConditionController_getMyConditions",
        "summary": "Get all conditions for the authenticated patient",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Conditions retrieved successfully"
          },
          "403": {
            "description": "Forbidden - User is not a patient"
          }
        },
        "tags": [
          "conditions"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Condition/patient/{patientId}": {
      "get": {
        "operationId": "ConditionController_getPatientConditions",
        "summary": "Get all conditions for a specific patient",
        "parameters": [
          {
            "name": "patientId",
            "required": true,
            "in": "path",
            "description": "Patient ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Conditions retrieved successfully"
          },
          "404": {
            "description": "Patient not found"
          }
        },
        "tags": [
          "conditions"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Condition/patient/{patientId}/active": {
      "get": {
        "operationId": "ConditionController_getActiveProblems",
        "summary": "Get active problems for a patient",
        "parameters": [
          {
            "name": "patientId",
            "required": true,
            "in": "path",
            "description": "Patient ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Active problems retrieved successfully"
          },
          "404": {
            "description": "Patient not found"
          }
        },
        "tags": [
          "conditions"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Condition/$by-category": {
      "get": {
        "operationId": "ConditionController_getConditionsByCategory",
        "summary": "Get conditions by category",
        "parameters": [
          {
            "name": "category",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Conditions retrieved successfully"
          }
        },
        "tags": [
          "conditions"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Condition/encounter/{encounterId}": {
      "get": {
        "operationId": "ConditionController_getConditionsForEncounter",
        "summary": "Get conditions for a specific encounter",
        "parameters": [
          {
            "name": "encounterId",
            "required": true,
            "in": "path",
            "description": "Encounter ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Conditions retrieved successfully"
          },
          "404": {
            "description": "Encounter not found"
          }
        },
        "tags": [
          "conditions"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Condition": {
      "post": {
        "operationId": "ConditionController_create",
        "summary": "Create a new resource",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Resource created successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "conditions"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "ConditionController_search",
        "summary": "Search for resources",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Resources",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "description": "List of items",
                          "type": "array",
                          "items": {
                            "type": "array"
                          }
                        },
                        "meta": {
                          "description": "Pagination metadata",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "totalItems": {
                                  "type": "number",
                                  "description": "Total number of items",
                                  "example": 100
                                },
                                "itemsPerPage": {
                                  "type": "number",
                                  "description": "Number of items per page",
                                  "example": 10
                                },
                                "currentPage": {
                                  "type": "number",
                                  "description": "Current page number",
                                  "example": 1
                                },
                                "totalPages": {
                                  "type": "number",
                                  "description": "Total number of pages",
                                  "example": 10
                                },
                                "nextPage": {
                                  "type": "string",
                                  "description": "URL to the next page (null if there is no next page)",
                                  "example": "/api/fhir/Patient?page=2&limit=10",
                                  "nullable": true
                                },
                                "prevPage": {
                                  "type": "string",
                                  "description": "URL to the previous page (null if there is no previous page)",
                                  "example": null,
                                  "nullable": true
                                }
                              },
                              "required": [
                                "totalItems",
                                "itemsPerPage",
                                "currentPage",
                                "totalPages",
                                "nextPage",
                                "prevPage"
                              ]
                            }
                          ]
                        }
                      },
                      "required": [
                        "data",
                        "meta"
                      ]
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "conditions"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Condition/{id}": {
      "get": {
        "operationId": "ConditionController_findOne",
        "summary": "Get a resource by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Resource ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource retrieved successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "tags": [
          "conditions"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "operationId": "ConditionController_update",
        "summary": "Update a resource",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Resource ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource updated successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "tags": [
          "conditions"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "ConditionController_remove",
        "summary": "Delete a resource",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Resource ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "tags": [
          "conditions"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Condition/{id}/_history": {
      "get": {
        "operationId": "ConditionController_getHistory",
        "summary": "Get resource history",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Resource ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "History retrieved successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "tags": [
          "conditions"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Condition/$validate": {
      "post": {
        "operationId": "ConditionController_validate",
        "summary": "Validate a resource",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Validation results"
          },
          "400": {
            "description": "Invalid resource"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "conditions"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Procedure/$my-procedures": {
      "get": {
        "operationId": "ProcedureController_getMyProcedures",
        "summary": "Get all procedures for the authenticated patient",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Procedures retrieved successfully"
          },
          "403": {
            "description": "Forbidden - User is not a patient"
          }
        },
        "tags": [
          "procedures"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Procedure/patient/{patientId}": {
      "get": {
        "operationId": "ProcedureController_getPatientProcedures",
        "summary": "Get all procedures for a specific patient",
        "parameters": [
          {
            "name": "patientId",
            "required": true,
            "in": "path",
            "description": "Patient ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Procedures retrieved successfully"
          },
          "404": {
            "description": "Patient not found"
          }
        },
        "tags": [
          "procedures"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Procedure/$by-code": {
      "get": {
        "operationId": "ProcedureController_getProceduresByCode",
        "summary": "Search procedures by code",
        "parameters": [
          {
            "name": "code",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Procedures retrieved successfully"
          }
        },
        "tags": [
          "procedures"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Procedure/encounter/{encounterId}": {
      "get": {
        "operationId": "ProcedureController_getProceduresForEncounter",
        "summary": "Get procedures for a specific encounter",
        "parameters": [
          {
            "name": "encounterId",
            "required": true,
            "in": "path",
            "description": "Encounter ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Procedures retrieved successfully"
          },
          "404": {
            "description": "Encounter not found"
          }
        },
        "tags": [
          "procedures"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Procedure": {
      "post": {
        "operationId": "ProcedureController_create",
        "summary": "Create a new resource",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Resource created successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "procedures"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "ProcedureController_search",
        "summary": "Search for resources",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Resources",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "description": "List of items",
                          "type": "array",
                          "items": {
                            "type": "array"
                          }
                        },
                        "meta": {
                          "description": "Pagination metadata",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "totalItems": {
                                  "type": "number",
                                  "description": "Total number of items",
                                  "example": 100
                                },
                                "itemsPerPage": {
                                  "type": "number",
                                  "description": "Number of items per page",
                                  "example": 10
                                },
                                "currentPage": {
                                  "type": "number",
                                  "description": "Current page number",
                                  "example": 1
                                },
                                "totalPages": {
                                  "type": "number",
                                  "description": "Total number of pages",
                                  "example": 10
                                },
                                "nextPage": {
                                  "type": "string",
                                  "description": "URL to the next page (null if there is no next page)",
                                  "example": "/api/fhir/Patient?page=2&limit=10",
                                  "nullable": true
                                },
                                "prevPage": {
                                  "type": "string",
                                  "description": "URL to the previous page (null if there is no previous page)",
                                  "example": null,
                                  "nullable": true
                                }
                              },
                              "required": [
                                "totalItems",
                                "itemsPerPage",
                                "currentPage",
                                "totalPages",
                                "nextPage",
                                "prevPage"
                              ]
                            }
                          ]
                        }
                      },
                      "required": [
                        "data",
                        "meta"
                      ]
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "procedures"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Procedure/{id}": {
      "get": {
        "operationId": "ProcedureController_findOne",
        "summary": "Get a resource by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Resource ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource retrieved successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "tags": [
          "procedures"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "operationId": "ProcedureController_update",
        "summary": "Update a resource",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Resource ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource updated successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "tags": [
          "procedures"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "ProcedureController_remove",
        "summary": "Delete a resource",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Resource ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Resource deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "tags": [
          "procedures"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Procedure/{id}/_history": {
      "get": {
        "operationId": "ProcedureController_getHistory",
        "summary": "Get resource history",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Resource ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "History retrieved successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "tags": [
          "procedures"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/Procedure/$validate": {
      "post": {
        "operationId": "ProcedureController_validate",
        "summary": "Validate a resource",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Validation results"
          },
          "400": {
            "description": "Invalid resource"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "procedures"
        ],
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/terminology/validate-code": {
      "get": {
        "operationId": "TerminologyController_validateCode",
        "summary": "Validate a code in a code system",
        "parameters": [
          {
            "name": "system",
            "required": true,
            "in": "query",
            "description": "The code system URL",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code",
            "required": true,
            "in": "query",
            "description": "The code to validate",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "display",
            "required": false,
            "in": "query",
            "description": "The display text to validate",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Code validation result"
          }
        },
        "tags": [
          "terminology"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/terminology/expand": {
      "get": {
        "operationId": "TerminologyController_expandValueSet",
        "summary": "Expand a value set",
        "parameters": [
          {
            "name": "url",
            "required": true,
            "in": "query",
            "description": "The value set URL to expand",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "Filter for expansion",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "Offset for pagination",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "count",
            "required": false,
            "in": "query",
            "description": "Number of results to return",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Expanded value set"
          }
        },
        "tags": [
          "terminology"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/terminology/translate": {
      "get": {
        "operationId": "TerminologyController_translateCode",
        "summary": "Translate a code from one system to another",
        "parameters": [
          {
            "name": "source-system",
            "required": true,
            "in": "query",
            "description": "The source code system URL",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "source-code",
            "required": true,
            "in": "query",
            "description": "The source code to translate",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "target-system",
            "required": true,
            "in": "query",
            "description": "The target code system URL",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Code translation result"
          }
        },
        "tags": [
          "terminology"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/terminology/lookup": {
      "get": {
        "operationId": "TerminologyController_lookupCode",
        "summary": "Lookup details for a specific code",
        "parameters": [
          {
            "name": "system",
            "required": true,
            "in": "query",
            "description": "The code system URL",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code",
            "required": true,
            "in": "query",
            "description": "The code to lookup",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Code details"
          }
        },
        "tags": [
          "terminology"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/terminology/find-matches": {
      "post": {
        "operationId": "TerminologyController_findConcepts",
        "summary": "Find concepts matching a criteria",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Search criteria",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Matching concepts"
          }
        },
        "tags": [
          "terminology"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/{resourceType}/$validate": {
      "post": {
        "operationId": "ValidationController_validateResource",
        "summary": "Validate a FHIR resource",
        "parameters": [
          {
            "name": "resourceType",
            "required": true,
            "in": "path",
            "description": "The type of resource to validate",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "The resource to validate",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Validation result"
          }
        },
        "tags": [
          "validation"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/{resourceType}/{id}/$validate": {
      "post": {
        "operationId": "ValidationController_validateResourceInstance",
        "summary": "Validate a specific resource instance",
        "parameters": [
          {
            "name": "resourceType",
            "required": true,
            "in": "path",
            "description": "The type of resource to validate",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The ID of the resource instance",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "The resource to validate (optional)",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Validation result"
          }
        },
        "tags": [
          "validation"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/$validate-batch": {
      "post": {
        "operationId": "ValidationController_validateBatch",
        "summary": "Validate multiple resources in batch",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Bundle of resources to validate",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Batch validation results"
          }
        },
        "tags": [
          "validation"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/documentation": {
      "get": {
        "operationId": "DocumentationController_getDocumentation",
        "summary": "Get API documentation overview",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Documentation retrieved successfully"
          }
        },
        "tags": [
          "documentation"
        ]
      }
    },
    "/api/fhir/documentation/examples/{resourceType}": {
      "get": {
        "operationId": "DocumentationController_getExample",
        "summary": "Get example FHIR resource by type",
        "parameters": [
          {
            "name": "resourceType",
            "required": true,
            "in": "path",
            "description": "FHIR resource type (e.g., Patient, Observation)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Example resource retrieved successfully"
          },
          "404": {
            "description": "Example resource not found"
          }
        },
        "tags": [
          "documentation"
        ]
      }
    },
    "/api/fhir/documentation/operations": {
      "get": {
        "operationId": "DocumentationController_getOperations",
        "summary": "Get documentation for custom operations",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Operations documentation retrieved successfully"
          }
        },
        "tags": [
          "documentation"
        ]
      }
    },
    "/api/fhir/documentation/usage": {
      "get": {
        "operationId": "DocumentationController_getUsageExamples",
        "summary": "Get API usage examples",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Usage examples retrieved successfully"
          }
        },
        "tags": [
          "documentation"
        ]
      }
    },
    "/api/fhir/examples/paginated-patients": {
      "get": {
        "operationId": "ExamplePaginationController_getPaginatedPatients",
        "summary": "Example of paginated patients endpoint",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number (0-based)",
            "schema": {
              "minimum": 0,
              "default": 0,
              "type": "number"
            }
          },
          {
            "name": "size",
            "required": false,
            "in": "query",
            "description": "Number of items per page",
            "schema": {
              "minimum": 1,
              "maximum": 50,
              "default": 10,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paginated list of patients"
          }
        },
        "tags": [
          "pagination-examples"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/fhir/examples/paginated-practitioners": {
      "get": {
        "operationId": "ExamplePaginationController_getPaginatedPractitioners",
        "summary": "Example of paginated practitioners endpoint",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number (0-based)",
            "schema": {
              "minimum": 0,
              "default": 0,
              "type": "number"
            }
          },
          {
            "name": "size",
            "required": false,
            "in": "query",
            "description": "Number of items per page",
            "schema": {
              "minimum": 1,
              "maximum": 50,
              "default": 10,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paginated list of practitioners"
          }
        },
        "tags": [
          "pagination-examples"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/health": {
      "get": {
        "operationId": "HealthController_getApiHealth",
        "summary": "Get API health status",
        "parameters": [],
        "responses": {
          "200": {
            "description": "API is healthy"
          }
        },
        "tags": [
          "health"
        ]
      }
    },
    "/api/health/fhir-server": {
      "get": {
        "operationId": "HealthController_checkFhirServerHealth",
        "summary": "Check FHIR server health status",
        "parameters": [],
        "responses": {
          "200": {
            "description": "FHIR server health status"
          },
          "503": {
            "description": "FHIR server is unhealthy or unavailable"
          }
        },
        "tags": [
          "health"
        ]
      }
    }
  },
  "info": {
    "title": "MediCare FHIR API",
    "description": "\n        # MediCare FHIR-based Electronic Health Records API\n\n        ## Overview\n        This API provides comprehensive access to healthcare data using the HL7 FHIR R4 standard with role-based access control.\n        The API enables secure, interoperable exchange of healthcare information for electronic health records (EHR) systems.\n\n        ## User Roles\n        - **Admin**: Full access to all resources and administrative functions\n        - **Practitioner**: Access to patient data and medical records with authorization controls\n        - **Patient**: Access to their own medical records only\n        - **Pharmacist**: Access to medication-related resources (where implemented)\n\n        ## Authentication\n        All API endpoints (except login and registration) require authentication using JWT.\n        1. Obtain a token by calling `/api/auth/login`\n        2. Include the token in the Authorization header: `Authorization: Bearer YOUR_TOKEN`\n\n        ## Common Parameters\n        - **Pagination**: \n            - `page`: Page number (1-based)\n            - `limit`: Items per page\n            - `sort`: Field to sort by\n            - `sortDirection`: Sort order ('asc' or 'desc')\n        - **Resource IDs**: Most endpoints require a resource ID or type in the path\n        - **Search Parameters**: FHIR standard search parameters are supported for resource types\n      ",
    "version": "1.0.0",
    "contact": {
      "name": "MediCare Support",
      "url": "https://medicare.example.com",
      "email": "support@medicare.example.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "tags": [
    {
      "name": "auth",
      "description": "Authentication endpoints for login, registration, and password management"
    },
    {
      "name": "users",
      "description": "User management endpoints for creating and managing user accounts"
    },
    {
      "name": "fhir",
      "description": "Generic FHIR resource operations and capabilities"
    },
    {
      "name": "validation",
      "description": "FHIR resource validation endpoints"
    },
    {
      "name": "terminology",
      "description": "Terminology services for code validation and lookup"
    },
    {
      "name": "patients",
      "description": "Patient-specific endpoints and operations"
    },
    {
      "name": "practitioners",
      "description": "Healthcare provider endpoints and operations"
    },
    {
      "name": "encounters",
      "description": "Clinical encounter documentation and management"
    },
    {
      "name": "observations",
      "description": "Clinical observations, measurements, and lab results"
    },
    {
      "name": "procedures",
      "description": "Medical procedures documentation and tracking"
    },
    {
      "name": "conditions",
      "description": "Patient conditions and diagnoses"
    },
    {
      "name": "medications",
      "description": "Medication records and prescriptions"
    },
    {
      "name": "organizations",
      "description": "Healthcare organization management"
    },
    {
      "name": "questionnaires",
      "description": "Clinical questionnaires and forms"
    },
    {
      "name": "diagnostic-reports",
      "description": "Diagnostic test results and reports"
    },
    {
      "name": "payments",
      "description": "Payment and billing records"
    },
    {
      "name": "health",
      "description": "System health check endpoints"
    },
    {
      "name": "documentation",
      "description": "API documentation resources"
    },
    {
      "name": "pagination-examples",
      "description": "Examples of paginated resource endpoints"
    }
  ],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http",
        "description": "Enter JWT token obtained from login"
      }
    },
    "schemas": {
      "RegisterDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User full name",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "description": "User email",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "description": "User password",
            "example": "Password123!",
            "minLength": 8
          },
          "repeatPassword": {
            "type": "string",
            "description": "Repeat password for confirmation",
            "example": "Password123!"
          },
          "accessCode": {
            "type": "string",
            "description": "Access code for registration (required for all accounts except first admin)",
            "example": "ABC123XYZ"
          },
          "phone": {
            "type": "string",
            "description": "Phone number",
            "example": "+1234567890"
          }
        },
        "required": [
          "name",
          "email",
          "password",
          "repeatPassword",
          "accessCode"
        ]
      },
      "LoginDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User email",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "description": "User password",
            "example": "password123",
            "minLength": 8
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "VerifyAccessCodeDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User email",
            "example": "user@example.com"
          },
          "accessCode": {
            "type": "string",
            "description": "Access code received via email",
            "example": "ABC123XYZ"
          }
        },
        "required": [
          "email",
          "accessCode"
        ]
      },
      "PasswordResetRequestDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User email",
            "example": "user@example.com"
          }
        },
        "required": [
          "email"
        ]
      },
      "PasswordResetConfirmDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User email",
            "example": "user@example.com"
          },
          "resetCode": {
            "type": "string",
            "description": "Reset code received via email",
            "example": "ABC123XYZ"
          },
          "newPassword": {
            "type": "string",
            "description": "New password",
            "example": "NewPassword123!"
          }
        },
        "required": [
          "email",
          "resetCode",
          "newPassword"
        ]
      },
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User full name",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "description": "User email",
            "example": "user@example.com"
          },
          "role": {
            "type": "string",
            "description": "User role",
            "enum": [
              "admin",
              "patient",
              "practitioner"
            ],
            "example": "patient"
          },
          "phone": {
            "type": "string",
            "description": "Phone number",
            "example": "+1234567890"
          },
          "fhirResourceId": {
            "type": "string",
            "description": "FHIR resource ID",
            "example": "123456"
          },
          "fhirResourceType": {
            "type": "string",
            "description": "FHIR resource type",
            "example": "Patient or Practitioner"
          }
        },
        "required": [
          "name",
          "email",
          "role"
        ]
      },
      "CreateUserWithResourceDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User full name",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "description": "User email",
            "example": "user@example.com"
          },
          "role": {
            "type": "string",
            "description": "User role",
            "enum": [
              "patient",
              "practitioner"
            ],
            "example": "patient"
          },
          "phone": {
            "type": "string",
            "description": "Phone number",
            "example": "+1234567890"
          },
          "resourceData": {
            "type": "object",
            "description": "FHIR resource data",
            "example": {
              "resourceType": "Patient",
              "active": true,
              "name": [
                {
                  "family": "Doe",
                  "given": [
                    "John"
                  ]
                }
              ],
              "gender": "male",
              "birthDate": "1970-01-01"
            }
          }
        },
        "required": [
          "name",
          "email",
          "role",
          "resourceData"
        ]
      },
      "PatientDto": {
        "type": "object",
        "properties": {
          "resourceType": {
            "type": "string",
            "description": "Type of the FHIR resource",
            "example": "Patient"
          },
          "id": {
            "type": "string",
            "description": "Logical identifier for this resource",
            "example": "f001"
          },
          "meta": {
            "type": "object",
            "description": "Metadata about this resource",
            "example": {
              "versionId": "1",
              "lastUpdated": "2023-06-15T10:15:30.000Z"
            }
          },
          "text": {
            "type": "object",
            "description": "A human-readable narrative",
            "example": {
              "status": "generated",
              "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\">Some narrative content</div>"
            }
          },
          "active": {
            "type": "boolean",
            "description": "Whether this patient record is in active use",
            "example": true
          },
          "name": {
            "type": "array",
            "description": "A name associated with the patient",
            "items": {
              "type": "object",
              "properties": {
                "use": {
                  "type": "string",
                  "example": "official"
                },
                "family": {
                  "type": "string",
                  "example": "Smith"
                },
                "given": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "John"
                  ]
                }
              }
            }
          },
          "telecom": {
            "type": "array",
            "description": "A contact detail for the patient",
            "items": {
              "type": "object",
              "properties": {
                "system": {
                  "type": "string",
                  "example": "phone"
                },
                "value": {
                  "type": "string",
                  "example": "555-123-4567"
                },
                "use": {
                  "type": "string",
                  "example": "home"
                }
              }
            }
          },
          "gender": {
            "type": "string",
            "description": "Administrative Gender",
            "example": "male",
            "enum": [
              "male",
              "female",
              "other",
              "unknown"
            ]
          },
          "birthDate": {
            "type": "string",
            "description": "The date of birth for the patient",
            "example": "1974-12-25"
          }
        },
        "required": [
          "resourceType"
        ]
      },
      "FhirBundleDto": {
        "type": "object",
        "properties": {
          "resourceType": {
            "type": "string",
            "description": "Type of the FHIR resource",
            "example": "Bundle"
          },
          "type": {
            "type": "string",
            "description": "Type of bundle (document, message, transaction, etc.)",
            "example": "searchset"
          },
          "total": {
            "type": "number",
            "description": "Total number of matches",
            "example": 15
          },
          "link": {
            "type": "array",
            "description": "Links for pagination or related resources",
            "items": {
              "type": "object",
              "properties": {
                "relation": {
                  "type": "string",
                  "example": "self"
                },
                "url": {
                  "type": "string",
                  "example": "http://example.org/fhir/Patient?_count=10"
                }
              }
            }
          },
          "entry": {
            "type": "array",
            "description": "Entries in the bundle",
            "items": {
              "type": "object",
              "properties": {
                "fullUrl": {
                  "type": "string"
                },
                "resource": {
                  "type": "object"
                },
                "search": {
                  "type": "object",
                  "properties": {
                    "mode": {
                      "type": "string"
                    },
                    "score": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "resourceType",
          "type"
        ]
      },
      "OperationOutcomeDto": {
        "type": "object",
        "properties": {
          "resourceType": {
            "type": "string",
            "description": "Type of the FHIR resource",
            "example": "OperationOutcome"
          },
          "issue": {
            "type": "array",
            "description": "Issue details",
            "items": {
              "type": "object",
              "properties": {
                "severity": {
                  "type": "string",
                  "enum": [
                    "fatal",
                    "error",
                    "warning",
                    "information"
                  ],
                  "example": "error"
                },
                "code": {
                  "type": "string",
                  "example": "processing"
                },
                "diagnostics": {
                  "type": "string",
                  "example": "The operation failed because of an internal server error"
                },
                "location": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "Patient.name[0].given[0]"
                  ]
                }
              }
            }
          }
        },
        "required": [
          "resourceType",
          "issue"
        ]
      },
      "PaginationMetaDto": {
        "type": "object",
        "properties": {
          "totalItems": {
            "type": "number",
            "description": "Total number of items",
            "example": 100
          },
          "itemsPerPage": {
            "type": "number",
            "description": "Number of items per page",
            "example": 10
          },
          "currentPage": {
            "type": "number",
            "description": "Current page number",
            "example": 1
          },
          "totalPages": {
            "type": "number",
            "description": "Total number of pages",
            "example": 10
          },
          "nextPage": {
            "type": "string",
            "description": "URL to the next page (null if there is no next page)",
            "example": "/api/fhir/Patient?page=2&limit=10",
            "nullable": true
          },
          "prevPage": {
            "type": "string",
            "description": "URL to the previous page (null if there is no previous page)",
            "example": null,
            "nullable": true
          }
        },
        "required": [
          "totalItems",
          "itemsPerPage",
          "currentPage",
          "totalPages",
          "nextPage",
          "prevPage"
        ]
      },
      "PaginatedResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "description": "List of items",
            "type": "array",
            "items": {
              "type": "array"
            }
          },
          "meta": {
            "description": "Pagination metadata",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "totalItems": {
                    "type": "number",
                    "description": "Total number of items",
                    "example": 100
                  },
                  "itemsPerPage": {
                    "type": "number",
                    "description": "Number of items per page",
                    "example": 10
                  },
                  "currentPage": {
                    "type": "number",
                    "description": "Current page number",
                    "example": 1
                  },
                  "totalPages": {
                    "type": "number",
                    "description": "Total number of pages",
                    "example": 10
                  },
                  "nextPage": {
                    "type": "string",
                    "description": "URL to the next page (null if there is no next page)",
                    "example": "/api/fhir/Patient?page=2&limit=10",
                    "nullable": true
                  },
                  "prevPage": {
                    "type": "string",
                    "description": "URL to the previous page (null if there is no previous page)",
                    "example": null,
                    "nullable": true
                  }
                },
                "required": [
                  "totalItems",
                  "itemsPerPage",
                  "currentPage",
                  "totalPages",
                  "nextPage",
                  "prevPage"
                ]
              }
            ]
          }
        },
        "required": [
          "data",
          "meta"
        ]
      }
    }
  }
}